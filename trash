#!/bin/bash

# this should replace my usage of rm to integrate into the gnome/budgie trashcan

if [ -z "$1" ]; then
  echo "No paths given to trash"
  exit
fi

# === Global variables ===
TARGET_PATH=""
BASENAME=""
TRASHINFOFILE=""
TIMESTAMP=""
TRASHLOCATION=$HOME/.local/share/Trash/files
# ========================

# === Methods ===
# this determines if file/dir actually exists
function verifyPath {
  TARGET_PATH="$(readlink -f $1)"
  EXISTS=false;
  if test -f "$TARGET_PATH"; then
    EXISTS=true;
  elif test -d "$TARGET_PATH"; then
    EXISTS=true;
  fi

  if [ "$EXISTS" = false ]; then
    echo "Neither a file or directory was found at :"
    echo "$TARGET_PATH"
    exit
  fi
}

#  this gets the information needed for the .trashinfo file
function readyTrashInfo {
  BASENAME="$(basename "$TARGET_PATH")"
  TIMESTAMP="$(date +"%Y-%m-%dT%k:%M:%S")"
  TRASHINFOFILE="$HOME/.local/share/Trash/info/$BASENAME.trashinfo"
}

# this is where the file actually gets trashed
function moveToTrash {
  #make infofile
  echo "[Trash Info]" > "$TRASHINFOFILE"
  echo "Path=$TARGET_PATH" >> "$TRASHINFOFILE"
  echo "DeletionDate=$TIMESTAMP" >> "$TRASHINFOFILE"
  #move file into trash
  mv "$TARGET_PATH" "$TRASHLOCATION"
}

# this acts as the main wrapper for all other functions
function main {
  verifyPath "$1"
  readyTrashInfo
  moveToTrash
}

for ARG in $@; do
  # echo $ARG
  main "$ARG"
done
